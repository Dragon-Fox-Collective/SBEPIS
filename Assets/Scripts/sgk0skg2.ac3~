using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using WrightWay.SBEPIS.Modus;

namespace WrightWay.SBEPIS
{
	public class Sylladex
	{
		private FetchModus modus;
		private List<Item> cards;
		private Player player;

		public Sylladex(Player player)
		{
			this.player = player;
			modus = new StackModus();
			cards = new List<Item>(new Item[]{ null, null, null, null, null });
		}

		public void Captchalogue(Item item)
		{
			Eject(modus.Deposit(item, cards));
			item.transform.SetParent(player.sylladexParent);
			item.gameObject.SetActive(false);
		}

		public Item Display()
		{
			return modus.Display(cards);
		}

		public void Eject(Item item)
		{
			if (!item)
				return;

			item.transform.SetParent(null);
			item.transform.position = player.transform.position + player.transform.forward;
			item.transform.rotation = player.transform.rotation;
			item.rigidbody.velocity = player.transform.forward * 6;
			item.rigidbody.angularVelocity = Vector3.zero;
			Item.SetLayerRecursively(item.gameObject, LayerMask.NameToLayer("Default")); // could be Held from parent
			item.gameObject.SetActive(true);
		}
	}
}